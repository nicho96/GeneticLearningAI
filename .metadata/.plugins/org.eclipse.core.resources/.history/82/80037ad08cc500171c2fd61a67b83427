package ca.nicho.xor;

import java.util.Random;

import ca.nicho.neat.DefaultNEAT;
import ca.nicho.neat.SpeciationNEAT;
import ca.nicho.neuralnet.NeuralNetwork;

public class XORAI {
	
	public static void main(String[] s){
		
		NeuralNetwork origin = new NeuralNetwork(2, 1, 1);
		
		SpeciationNEAT neat = new SpeciationNEAT(origin, delegate);

		int generation = 0;
		while(true){
			generation++;
			System.out.println("==== Current Generation: " + generation + " ====");
			neat.nextGeneration();
		}
		
	}
	
	private static DefaultNEAT.SimulateDelegate delegate = (NeuralNetwork network) -> {
		double score = 0;
			
		for(int i1 = 0; i < 2; i++){
			for(int i2)
		}
		network.updateInputs(new double[]{i1, i2});
		network.updateLayers();
		score += 1 - Math.abs(network.outputs[0].value - value);
								
		network.score = (int)(score * 100);
	};

}
